{"version":3,"sources":["Redux-Store/actions.js","api/api.js","Redux-Store/constants.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","registerServiceWorker.js","Redux-Store/reducers.js","index.js"],"names":["sendRequestRobots","dispatch","link","type","fetch","then","response","json","data","payload","catch","error","Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","aria-label","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","info","setState","Component","App","onRequestRobots","_this$props","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_Scroll","ErrorBoundry","components_CardList","connect","searchRobots","requestRobots","event","target","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","initialStateSearch","initialStateRobots","logger","createLogger","rootReducers","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f02af4c2.chunk.js","sourcesContent":["import { apiCall } from '../api/api';\nimport {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants';\n\n\nexport const setSearchField = (text) => ({ \n  type: CHANGE_SEARCH_FIELD, \n  payload: text \n})\n\nexport const sendRequestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING })\n  apiCall('https://jsonplaceholder.typicode.com/users')\n    .then(data => dispatch({ \n      type: REQUEST_ROBOTS_SUCCESS, payload: data \n    }))\n    .catch(error => dispatch({ \n      type: REQUEST_ROBOTS_FAILED, payload: error \n    }))\n}","\n//all api fetch\nexport const apiCall = (link) =>\n  fetch(link).then(response => response.json())","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={robots[i].id}\n              name={robots[i].name}\n              email={robots[i].email}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        aria-label=\"Search Robots:\"\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react'\n//handling error for deploy app\n//not showing in development\nclass ErrorBoundary extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//redux store\nimport { setSearchField, sendRequestRobots } from '../Redux-Store/actions';\n//component\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n//style\nimport './App.css';\n\n// parameter state comes from store\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending\n  }\n}\n\n//send parameter to store and getting a function\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(sendRequestRobots())\n  }\n}\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { robots, searchField, onSearchChange, isPending } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return (\n      <div className='tc'>\n        <h1 className='f1'>Robot Friends</h1>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          { isPending ? <h1>Loading...</h1> :\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          }\n        </Scroll>\n      </div>\n    );\n  }\n}\n\n// connect to store \nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {searchField: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStateRobots = {\n  robots: [],\n  isPending: true\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {isPending: true})\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {robots: action.payload, isPending: false})\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {error: action.payload})\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport 'tachyons';\n\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { requestRobots, searchRobots } from './Redux-Store/reducers'\n\nimport './index.css';\n\nconst logger = createLogger()\n\nconst rootReducers = combineReducers({requestRobots, searchRobots})\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}